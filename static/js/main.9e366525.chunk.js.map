{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["console","log","states","App","useState","selected","setSelected","Grid","FormControl","style","float","marginRight","marginTop","InputLabel","id","Select","labelId","value","onChange","event","target","Object","entries","map","state","MenuItem","StateDetails","data","races","props","votes","votes2012","votes2016","timeseries","clinton2016","trump2016","counties","candidates","state_name","votes2020","c","candidate_key","className","container","Timeseries","called","winnerCalledTimestamp","spacing","marginBottom","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","Canidate","v2016","name_display","item","xs","Typography","variant","toLocaleString","toFixed","bidenj","trumpd","DataTable","percent","absentee_votes","absentee_percent","label","role","qp","resp","search","window","location","substr","split","tmp","decodeURIComponent","QueryParams","limit","Date","getTime","lastVotesBiden","lastVotesTrump","t","update","timestamp","thisVotesBiden","parseInt","vote_shares","thisVotesTrump","push","width","height","chartType","loader","options","title","focusTarget","hAxis","vAxes","0","1","series","color","targetAxisIndex","2","type","3","explorer","actions","row","backgroundColor","results","name","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9e366525.chunk.js","sourcesContent":["import React, {useState} from \"react\";\nimport './App.css';\nimport {Grid, Table, TableContainer, TableHead, TableRow, Typography, TableCell, TableBody, Select, MenuItem, InputLabel, FormControl} from \"@material-ui/core\";\nimport Chart from \"react-google-charts\";\n\nimport * as states from './states_data';\n\nconsole.log(states);\n\nfunction App() {\n\n  const [selected, setSelected] = useState('arizona');\n\n  const handleChange = (event) => {\n    setSelected(event.target.value);\n  };\n\n  return <Grid>\n    <FormControl style={{float: 'right', marginRight: 10, marginTop: 10}}>\n      <InputLabel id=\"demo-simple-select-label\">State</InputLabel>\n      <Select\n        labelId=\"demo-simple-select-label\"\n        value={selected}\n        onChange={handleChange}\n      >\n        {Object.entries(states).map(([state, data]) => {\n          return <MenuItem value={state}>{state}</MenuItem>\n        })}\n      </Select>\n    </FormControl>\n\n    <StateDetails data={states[selected].data.races[0]}/>\n  </Grid>;\n}\n\nexport default App;\n\n\nfunction StateDetails(props) {\n\n  let {votes, votes2012, votes2016, timeseries, clinton2016, trump2016, counties, candidates, state_name} = props.data;\n\n  let votes2020 = {}\n  candidates.map(c => {\n    votes2020[c.candidate_key] = c.votes;\n    return c;\n  });\n\n\n  return (\n    <div className=\"State\">\n\n      <Grid container>\n        <Timeseries data={timeseries} called={props.data.winnerCalledTimestamp} state={state_name}/>\n      </Grid>\n\n      <Grid container spacing={2} style={{marginBottom: 20}}>\n        <TableContainer>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Canidate</TableCell>\n                <TableCell>Votes</TableCell>\n                <TableCell>Percentage</TableCell>\n                <TableCell>Absentee Votes</TableCell>\n                <TableCell>Absentee Percentage</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {candidates.map(c => {\n                return <Canidate key={c.name_display} data={c} v2016={[clinton2016, trump2016]}/>\n              })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Grid>\n\n      <Grid container spacing={2} style={{marginBottom: 20}}>\n\n        <Grid item xs={12}>\n          <Typography variant='h5'>History</Typography>\n        </Grid>\n\n        <Grid item xs={2}>\n          <Typography variant=\"caption\">Votes 2012</Typography>\n          <Typography>{votes2012.toLocaleString('us-EN')}</Typography>\n        </Grid>\n        <Grid item xs={2}>\n          <Typography variant=\"caption\">Votes 2016</Typography>\n          <Typography>{votes2016.toLocaleString('us-EN')}</Typography>\n          <Typography variant=\"caption\">Increase 2016</Typography>\n          <Typography>{(votes2016 - votes2012).toLocaleString('us-EN')} ({(((votes2016 - votes2012) / votes2012) * 100).toFixed(2)}%)</Typography>\n        </Grid>\n        <Grid item xs={2}>\n          <Typography variant=\"caption\">Votes 2020</Typography>\n          <Typography>{votes.toLocaleString('us-EN')}</Typography>\n          <Typography variant=\"caption\">Increase 2020</Typography>\n          <Typography>{(votes - votes2016).toLocaleString('us-EN')} ({(((votes - votes2016) / votes2016) * 100).toFixed(2)}%)</Typography>\n        </Grid>\n        <Grid item xs={2}>\n          <Typography variant=\"caption\">Clinton 2016</Typography>\n          <Typography>{clinton2016.toLocaleString('us-EN')}</Typography>\n          <Typography variant=\"caption\">Biden Increase</Typography>\n          <Typography>{(votes2020.bidenj - clinton2016).toLocaleString('us-EN')} ({(((votes2020.bidenj - clinton2016) / clinton2016) * 100).toFixed(2)}%)</Typography>\n        </Grid>\n        <Grid item xs={2}>\n          <Typography variant=\"caption\">Trump 2016</Typography>\n          <Typography>{trump2016.toLocaleString('us-EN')}</Typography>\n          <Typography variant=\"caption\">Trump Increase</Typography>\n          <Typography>{(votes2020.trumpd - trump2016).toLocaleString('us-EN')} ({(((votes2020.trumpd - trump2016) / trump2016) * 100).toFixed(2)}%)</Typography>\n        </Grid>\n      </Grid>\n\n      <Grid container>\n        <DataTable data={counties}/>\n      </Grid>\n    </div>\n  );\n}\n\nfunction Canidate(props) {\n  let c = props.data;\n  return (\n    <TableRow>\n      <TableCell>{c.name_display}</TableCell>\n      <TableCell>{c.votes.toLocaleString('us-EN')}</TableCell>\n      <TableCell>{c.percent}%</TableCell>\n      <TableCell>{c.absentee_votes.toLocaleString('us-EN')}</TableCell>\n      <TableCell>{c.absentee_percent}%</TableCell>\n    </TableRow>\n  )\n}\n\nfunction Timeseries(props) {\n\n  let data = [[\n    {label: 'Datetime', role: 'domain'},\n    {label: \"Called\", role: \"annotation\"},\n    {label: 'Trump Total', role: 'data'},\n    {label: 'Biden Total', role: 'data'},\n    {label: 'Trump Change', role: 'data'},\n    {label: 'Biden Change', role: 'data'}\n  ]];\n\n  let qp = QueryParams();\n\n  let limit = qp.limit ? (new Date(qp.limit)).getTime() : (new Date(\"2020-11-05 06:00:00\")).getTime();\n\n  let lastVotesBiden = 0;\n  let lastVotesTrump = 0;\n\n  let minus = false;\n  props.data.map(t => {\n    // if (parseInt(t.votes * t.vote_shares.bidenj) === 1570992) {\n    //   minus = true;\n    //   return t;\n    // }\n\n    let update = new Date(t.timestamp);\n\n    let thisVotesBiden = parseInt(t.votes * t.vote_shares.bidenj);\n    let thisVotesTrump = parseInt(t.votes * t.vote_shares.trumpd);\n\n    if(minus) {\n      thisVotesBiden = thisVotesBiden - 135000;\n    }\n\n    if (update.getTime() > limit || t.votes === 0) {\n      // console.log(t);\n    } else {\n      data.push([\n        update,\n        null,\n        thisVotesTrump,\n        thisVotesBiden,\n        thisVotesTrump - lastVotesTrump,\n        thisVotesBiden - lastVotesBiden\n      ])\n    }\n\n    lastVotesBiden = thisVotesBiden;\n    lastVotesTrump = thisVotesTrump;\n    return t;\n  })\n\n  if (props.called > limit) {\n    // console.log(t);\n  } else {\n    data.push([\n      new Date(props.called),\n      \"CALLED\",\n      null,\n      null,\n      null,\n      null\n    ])\n  }\n\n\n  return (\n    <Chart\n      data={data}\n      width={'100%'}\n      height={'600px'}\n      chartType=\"LineChart\"\n      loader={<div>Loading Chart</div>}\n      options={{\n        title: props.state + ' Votes Over Time',\n        focusTarget: 'category',\n        hAxis: {\n          title: 'Date/Time',\n        },\n        vAxes: {\n          0: {title: 'Votes'},\n          1: {title: 'Change'}\n        },\n        series: {\n          0: {color: 'red', targetAxisIndex: 0},\n          1: {color: 'blue', targetAxisIndex: 0},\n          2: {type: 'bars', color: 'red', targetAxisIndex: 1},\n          3: {type: 'bars', color: 'blue', targetAxisIndex: 1}\n        },\n        explorer: {actions: ['dragToZoom', 'rightClickToReset']}\n      }}\n    />\n  )\n}\n\nfunction DataTable(props) {\n  return (\n    <TableContainer>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>\n              County\n            </TableCell>\n            <TableCell>\n              Trump\n            </TableCell>\n            <TableCell>\n              Biden\n            </TableCell>\n            <TableCell>\n              Trump Lead\n            </TableCell>\n            <TableCell>\n              Trump/Biden %\n            </TableCell>\n          </TableRow>\n        </TableHead>\n\n        <TableBody>\n          {\n            props.data.map(row => {\n              return <TableRow key={row.name}\n                               style={{backgroundColor: row.results.trumpd - row.results.bidenj > 0 ? '#fdd1d1' : '#d1e3fd'}}>\n                <TableCell>\n                  {row.name}\n                </TableCell>\n                <TableCell>\n                  {row.results.trumpd}\n                </TableCell>\n                <TableCell>\n                  {row.results.bidenj}\n                </TableCell>\n                <TableCell>\n                  {row.results.trumpd - row.results.bidenj}\n                </TableCell>\n                <TableCell>\n                  {(((row.results.trumpd) / row.votes) * 100).toFixed(2)}%\n                  / {(((row.results.bidenj) / row.votes) * 100).toFixed(2)}%\n                </TableCell>\n              </TableRow>\n            })\n          }\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nfunction QueryParams() {\n  let resp = {};\n  let search = window.location.search.substr(1)\n\n  search = search.split(\"&\");\n\n  search.map(item => {\n    let tmp = item.split(\"=\");\n\n    switch (tmp[1]) {\n      case \"true\":\n        tmp[1] = true;\n        break;\n      case \"false\":\n        tmp[1] = false;\n        break;\n      default:\n        break;\n    }\n\n    resp[tmp[0]] = decodeURIComponent(tmp[1]);\n\n    return item;\n  })\n\n  return resp;\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}